plugins {
    id 'org.jetbrains.kotlin.jvm'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.apache.cxf:cxf-rt-transports-http:${apacheCxfVersion}"
    implementation "org.apache.cxf:cxf-rt-transports-http-jetty:${apacheCxfVersion}"
    implementation "org.apache.cxf:cxf-rt-frontend-jaxrs:${apacheCxfVersion}"
    implementation "org.apache.cxf:cxf-rt-rs-json-basic:${apacheCxfVersion}"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonModuleKotlin}"
    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonJsonProviderVersion}"
    implementation project(":rpc")
    implementation project(":evm")
    implementation project(":common")
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitParamsVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitParamsVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitParamsVersion}"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${junitParamsVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${junitMockitoVersion}"
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}"
    testImplementation "org.apache.httpcomponents:httpclient:${httpComponentsVersion}"
}

compileKotlin {
    kotlinOptions.jvmTarget = "10"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "10"
}